openapi: 3.0.0
info:
  title: Personal Portfolio Configuration API
  version: '1.0'
  contact:
    name: Evgeny
  description: Personal Portfolio Configuration API
  license:
    name: MIT License
    url: 'https://opensource.org/licenses/MIT'
paths:
  '/api/currencies':
    summary: Path used to manage the list of currencies.
    description: 'The REST endpoint/path used to list `Currency` entities.  This path contains a `GET` and `POST` operation to perform the list and create tasks, respectively.'
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Currency'
              examples:
                Default:
                  value:
                    - code: USD
                      description: United States dollar
                    - code: EUR
                      description: EURO
                    - code: RUR
                      description: Russian Ruble
          description: Successful response - returns an array of `Currency` entities.
        '304':
          description: Not modified response.
      operationId: getcurrencies
      summary: List All currencies
      description: Gets a list of all `Currency` entities.
      tags:
        - currency
  '/api/security-types':
    get:
      summary: List All security types
      responses:
        '200':
          description: Successful response - returns an array of security types.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SecurityType'
              examples:
                Default:
                  value:
                    - code: bonds
                      description: "Instruments of indebtedness of the bond issuer to the holders.\nThe most common types of bonds include municipal bonds and corporate bonds. \n"
                      type: Bonds
                      category: Debt
                    - code: equities
                      description: Stocks
                      type: Stocks or Equities
                      category: Equity
                    - code: deposits
                      description: Bank deposits
                      type: Bank deposits
                      category: Fixed income
        '304':
          description: Not modified response.
      operationId: getSecurityTypes
      description: Gets a list of all security types.
      tags:
        - security
    description: |
      The REST endpoint/path used to list security types.
      This path contains a `GET` to perform the list operation.
    summary: Path used to manage the list of security types.
  '/api/securities':
    summary: Path used to manage the list of securities.
    description: 'The REST endpoint/path used to list `Security` entities.  This path contains a `GET` and `POST` operation to perform the list and create security, respectively.'
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Security'
              examples:
                Default:
                  value:
                    - code: FXRU
                      description: FinEX Russian corporate bonds ETF
                      type: Funds
                      currency: RUR
          description: Successful response - returns an array of `Security` entities.
        '304':
          description: Not modified response.
      operationId: getsecurities
      summary: List All securities
      description: Gets a list of all `Security` entities.
      tags:
        - security
  '/api/currencies/{code}':
    summary: Path used to manage a single Currency.
    description: 'The REST endpoint/path used to get, update, and delete single instances of an `Currency`.  This path contains `GET`, `PUT`, and `DELETE` operations used to perform the get, update, and delete tasks, respectively.'
    get:
      operationId: getCurrency
      summary: Get a Currency
      description: Gets the details of a single instance of a `Currency`.
      responses:
        '200':
          description: Successful response - returns a single `Currency`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Currency'
              examples:
                USD:
                  value:
                    code: USD
                    description: United States dollar
                EUR:
                  value:
                    code: EUR
                    description: EURO
                RUR:
                  value:
                    code: RUR
                    description: Russian Ruble
        '404':
          description: Currency code does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/Error'
              examples:
                Default:
                  value:
                    errors:
                      - id: '1'
                        status: Not found
                        code: 404
                        title: Currency code does not exist
                        detail: "Currency 'HUF' is not available on this server"
      tags:
        - currency
    put:
      requestBody:
        description: Updated `Currency` information.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Currency'
        required: true
      responses:
        '202':
          description: Successful response.
        '404':
          description: Currency code does not exist
          content:
            application/json:
              schema:
                type: string
      operationId: updateCurrency
      summary: Update a Currency
      description: Updates an existing `Currency`.
      tags:
        - currency
    delete:
      responses:
        '204':
          description: Successful response.
        '404':
          description: Currency code does not exist
          content:
            application/json:
              schema:
                type: string
      operationId: deleteCurrency
      summary: Delete a Currency
      description: Deletes an existing `Currency`.
      tags:
        - currency
    parameters:
      - name: code
        description: A unique identifier for a `Currency`.
        schema:
          type: string
          maxLength: 4
          minLength: 3
          pattern: '[A-Za-z]'
        in: path
        required: true
  '/api/securities/{code}':
    summary: Path used to manage a single security.
    description: 'The REST endpoint/path used to get, update, and delete single instances of an `Security`. This path contains `GET`, `PUT`, and `DELETE` operations used to perform the get, update, and delete tasks, respectively.'
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Security'
          description: Successful response - returns a single `Security`.
        '404':
          description: Security code does not exist
          content:
            application/json:
              schema:
                type: string
      operationId: getSecurity
      summary: Get a Security
      description: Gets the details of a single instance of a `Security`.
      tags:
        - security
    put:
      requestBody:
        description: Updated `Security` information.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Security'
        required: true
      responses:
        '202':
          description: Successful response.
        '404':
          description: Security code does not exist
          content:
            application/json:
              schema:
                type: string
      operationId: updateSecurity
      summary: Update a Security
      description: Updates an existing `Security`.
      tags:
        - security
    delete:
      responses:
        '204':
          description: Successful response.
        '404':
          description: Security code does not exist
          content:
            application/json:
              schema:
                type: string
      operationId: deleteSecurity
      summary: Delete a Security
      description: Deletes an existing `Security`.
      tags:
        - security
    parameters:
      - name: code
        description: A unique identifier for a `Security`.
        schema:
          type: string
        in: path
        required: true
  '/api/security-types/{type}':
    parameters:
      - schema:
          type: string
        name: type
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: Successful response - returns a single `Security Type`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityType'
        '404':
          description: Security Type code not exists
          content:
            application/json:
              schema:
                type: string
      operationId: getSecurityType
      description: Gets the details of a single instance of a `Security Type`.
components:
  schemas:
    Currency:
      $ref: ./Components/Currency.yml
    Security:
      $ref: ./Components/Security.yml
    SecurityType:
      $ref: ./Components/SecurityType.yml
    Error:
      $ref: ./Components/Error.yml
    JsonApiResponse:
      $ref: ./Components/JsonApiResponse.yml
tags:
  - name: system-configuration-frontend
    description: Methods for system configuration app
  - name: currency
    description: Methods related to currencies
  - name: security
    description: Methods related to securities
servers:
  - url: 'localhost:4010'
